# vim: syntax=yaml
---

  gui:
    # stuff relating to the UI
    scrollHeight: 2 # how many lines you scroll by
    sidePanelWidth: 0.3333 # number from 0 to 1
    scrollPastBottom: true # enable scrolling past the bottom
    mainPanelSplitMode: "flexible" # one of "horizontal" | "flexible" | "vertical"
    expandFocusedSidePanel: false
    theme:
      lightTheme: false # For terminals with a light background
      activeBorderColor:
        - "bold"
        - "green"
      inactiveBorderColor:
        - "white"
      optionsTextColor:
        - "blue"
      selectedLineBgColor:
        - "bold"
        - "blue"
      selectedRangeBgColor:
        - "blue"
    commitLength:
      show: true
    mouseEvents: true
    showFileTree: false # for rendering changes files in a tree format
    skipStashWarning: true
    skipUnstageLineWarning: false
  git:
    paging:
      pager: "delta"
      colorArg: "always"
      useConfig: false
    merging:
      # only applicable to unix users
      manualCommit: false
      # extra args passed to `git merge`, e.g. --no-ff
      args: ""
    pull:
      mode: "merge" # one of "merge" | "rebase" | "ff-only"
    autoFetch: true
    overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
    branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
    skipHookPrefix: "WIP"
    allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
    disableForcePushing: false
  refresher:
    fetchInterval: 60 # re-fetch interval in seconds
    refreshInterval: 10 # file/submodule refresh interval in seconds
  update:
    days: 14 # how often an update is checked for
    method: "prompt" # can be: prompt | background | never
  reporting: "undetermined" # one of: "on" | "off" | "undetermined"
  confirmOnQuit: false
  # determines whether hitting "esc" will quit the application when there is nothing to cancel/close
  quitOnTopLevelReturn: false
  disableStartupPopups: false
  notARepository: "prompt" # one of: "prompt" | "create" | "skip"
  keybinding:
    universal:
      quit: "q"
      quit-alt1: "<c-c>" # alternative/alias of quit
      return: "<esc>" # return to previous menu, will quit if there"s nowhere to return
      quitWithoutChangingDirectory: "Q"
      togglePanel: "<tab>" # goto the next panel
      prevItem: "<up>" # go one line up
      nextItem: "<down>" # go one line down
      prevItem-alt: "k" # go one line up
      nextItem-alt: "j" # go one line down
      prevPage: "," # go to next page in list
      nextPage: "." # go to previous page in list
      gotoTop: "<" # go to top of list
      gotoBottom: ">" # go to bottom of list
      prevBlock: "<left>" # goto the previous block / panel
      nextBlock: "<right>" # goto the next block / panel
      prevBlock-alt: "h" # goto the previous block / panel
      nextBlock-alt: "l" # goto the next block / panel
      nextMatch: "n"
      prevMatch: "N"
      optionMenu: "x" # show help menu
      optionMenu-alt1: "?" # show help menu
      select: "<space>"
      goInto: "<enter>"
      confirm: "<enter>"
      confirm-alt1: "y"
      remove: "d"
      new: "n"
      edit: "e"
      openFile: "o"
      scrollUpMain: "<pgup>" # main panel scrool up
      scrollDownMain: "<pgdown>" # main panel scrool down
      scrollUpMain-alt1: "K" # main panel scrool up
      scrollDownMain-alt1: "J" # main panel scrool down
      scrollUpMain-alt2: "<c-u>" # main panel scrool up
      scrollDownMain-alt2: "<c-d>" # main panel scrool down
      executeCustomCommand: ":"
      createRebaseOptionsMenu: "m"
      pushFiles: "P"
      pullFiles: "p"
      refresh: "R"
      createPatchOptionsMenu: "<c-p>"
      nextTab: "]"
      prevTab: "["
      nextScreenMode: "+"
      prevScreenMode: "_"
      undo: "z"
      redo: "<c-z>"
      filteringMenu: "<c-s>"
      diffingMenu: "W"
      diffingMenu-alt: "<c-e>" # deprecated
      copyToClipboard: "<c-o>"
      submitEditorText: "<enter>"
      appendNewline: "<tab>"
    status:
      checkForUpdate: "u"
      recentRepos: "<enter>"
    files:
      fetch: "f"
      ignoreFile: "i"
      refreshFiles: "r"
      commitChanges: "c"
      toggleTreeView: "`"
      amendLastCommit: "A"
      stashAllChanges: "s"
      toggleStagedAll: "a" # stage/unstage all
      viewStashOptions: "S"
      viewResetOptions: "D"
      commitChangesWithEditor: "C"
      commitChangesWithoutHook: "w" # commit changes without pre-commit hook
    branches:
      createPullRequest: "o"
      checkoutBranchByName: "c"
      forceCheckoutBranch: "F"
      rebaseBranch: "r"
      mergeIntoCurrentBranch: "M"
      viewGitFlowOptions: "i"
      fastForward: "f" # fast-forward this branch from its upstream
      pushTag: "P"
      setUpstream: "u" # set as upstream of checked-out branch
      fetchRemote: "f"
    commits:
      squashDown: "s"
      renameCommit: "r"
      renameCommitWithEditor: "R"
      viewResetOptions: "g"
      markCommitAsFixup: "f"
      createFixupCommit: "F" # create fixup commit for this commit
      squashAboveCommits: "S"
      moveDownCommit: "<c-j>" # move commit down one
      moveUpCommit: "<c-k>" # move commit up one
      amendToCommit: "A"
      pickCommit: "p" # pick commit (when mid-rebase)
      revertCommit: "t"
      cherryPickCopy: "c"
      cherryPickCopyRange: "C"
      pasteCommits: "v"
      tagCommit: "T"
      checkoutCommit: "<space>"
      resetCherryPick: "<c-R>"
      copyCommitMessageToClipboard: "<c-y>"
    stash:
      popStash: "g"
    commitFiles:
      checkoutCommitFile: "c"
    main:
      pickBothHunks: "b"
      toggleDragSelect: "v"
      toggleSelectHunk: "a"
      toggleDragSelect-alt: "V"
    submodules:
      init: "i"
      update: "u"
      bulkMenu: "b"
