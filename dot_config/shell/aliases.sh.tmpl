# vim: syntax=sh

# COMMON ALIASES
alias .-="cd -"
alias ..="cd .."
alias .2="cd ../.."
alias .3="cd ../../.."
alias .4="cd ../../../.."
alias .5="cd ../../../../.."
alias mkdir="mkdir -p"
debug_info "Adding aliases for 'common utilities'"

# VIM LIKE ALIASES
alias :q="exit 0"
alias :qa="exit 0"
alias :wq="exit 0"
alias :!q="exit 0"
debug_info "Adding aliases for 'exit'"

# ADD FUN ALIASES
alias sw='telnet towel.blinkenlights.nl'
alias map="telnet mapscii.me"
alias wrk="curl wrk.ist"
alias cht="curl cht.sh"
alias exsh="curl e.xec.sh/spongebob_magic"
alias rice="curl -L rum.sh/ricebowl"
alias joke="curl https://icanhazdadjoke.com"
alias news="curl getnews.tech"
alias chat="ssh chat.shazow.net"
alias race="curl node-web-console.glitch.me"
alias tron="ssh sshtron.zachlatta.com"
alias wttr="curl wttr.in/gdl"
alias pong="telnet milek7.gq"
alias bpsh="curl https://gist.githubusercontent.com/aaronNGi/a9212f36a8e0c2bc0674e259563ad952/raw/b0b86302d07b5b8a3c154a100bf41d98097c44d0/newscript.sh"
alias dance="nc rya.nc 1987"
alias chess="telnet freechess.org"
alias covid="curl -L covid19.trackercli.com/history/mx"
alias mines="sshpas -p 'play' ssh play@anonymine-demo.oskog97.com -p 2222"
alias parrot="curl parrot.live"
alias netris="ssh netris.rocketnine.space"
alias corona="curl https://corona-stats.online/mx"
alias forrest="curl ascii.live/forrest"
alias tictactoe="telnet pixelomer.com"

# IF BW IS INSTALLED
[ -n "$(command -v bw)" ]                                                                                                     \
    && alias bwlo='bw logout' \
    && alias bwli='eval $(bw login $(pass show bw/user) $(pass show bw/pass) --code $(2fa bw) | rg "export" | sed "s/\$ //g")' \
    && debug_info "Adding aliases for 'bw'"

# IF EXA IS INSTALLED
[ -n "$(command -v exa)" ]                               \
    && alias sl="exa -FG --git --icons"                  \
    && alias ls="exa -FG --git --icons"                  \
    && alias ll="exa -Flh --git --icons"                 \
    && alias lg="exa -FlhG --git --icons"                \
    && alias lt="exa -Flht --git --icons"                \
    && alias l1="exa -Flah --git --icons .."             \
    && alias l2="exa -Flah --git --icons ../.."          \
    && alias l3="exa -Flah --git --icons ../../.."       \
    && alias l4="exa -Flah --git --icons ../../../.."    \
    && alias l5="exa -Flah --git --icons ../../../../.." \
    && alias tree="exa --git --tree --icons"             \
    && debug_info "Adding aliases for 'exa'"

# IF BUKU IS INSTALLED
## [ -n "$(command -v buku)" ]                                                   \
##     && alias bukue="buku --export ~/.config/buku/{{ .computer.type }}bookmarks.md" \
##     && alias bukuo="open $(buku -p -f4 | fzf -m --reverse --preview \"buku -p {1}\" --preview-window=wrap | cut -f2)"  \
##     && debug_info "Adding aliases for 'buku'"

# IF NAVI IS INSTALLED
[ -n "$(command -v navi)" ]         \
    && alias navit="navi --tldr"    \
    && alias navip="navi --print"   \
    && alias navic="navi --cheatsh" \
    && debug_info "Adding aliases for 'navi'"

# IF TMUX IS INSTALLED
[ -n "$(command -v tmux)" ]                  \
    && alias tmux="TERM=xterm-256color tmux" \
    && debug_info "Adding aliases for 'tmux'"

# IF NEOVIM IS INSTALLED
[ -n "$(command -v nvim)" ]   \
    && alias vi="vim"         \
    && alias svi="sudo vi"    \
    && alias vim="nvim"       \
    && alias svim="sudo nvim" \
    && debug_info "Adding aliases for 'nvim'"

# IF IMGCAT IS INSTALLED
[ -n "$(command -v imgcat)" ]                             \
    && alias ic="imgcat"                                  \
    && alias icf="imgcat --width=$COLUMNS --heigh=$LINES" \
    && debug_info "Adding aliases for 'imgcat'"

# IF DOCKER IS INSTALLED
[ -n "$(command -v docker)" ]        \
    && alias dkr="docker"            \
    && alias dkrm="docker rm"        \
    && alias dkrr="docker run"       \
    && alias dkrp="docker pull"      \
    && alias dkri="docker images"    \
    && alias dkrm="docker rmi"       \
    && alias dkrps="docker ps --all" \
    && debug_info "Adding aliases for 'docker'"

# IF PACKER IS INSTALLED
[ -n "$(command -v packer)" ]        \
    && alias pkr="packer"            \
    && alias pkri="packer init"      \
    && alias pkrb="packer build"     \
    && alias pkrc="packer console"   \
    && alias pkrv="packer validate"  \
    && alias pkrin="packer inspect"  \
    && debug_info "Adding aliases for 'packer'"

# IF AWSUME IS INSTALLED
[ -n "$(command -v awsume)" ]  \
    && alias awsume=". awsume" \
    && debug_info "Adding aliases for 'awsume'"

# IF CHEZMOI IS INSTALLED
[ -n "$(command -v chezmoi)" ]               \
    && alias cm="chezmoi"                    \
    && alias cma="chezmoi add"               \
    && alias cmi="chezmoi init"              \
    && alias cmd="chezmoi diff"              \
    && alias cme="chezmoi edit"              \
    && alias cmcd="chezmoi cd"               \
    && alias cmat="chezmoi add --template"   \
    && alias cmap="chezmoi apply --verbose"  \
    && alias cmet="chezmoi execute-template" \
    && debug_info "Adding aliases for 'chezmoi'"

# IF LAZYGIT IS INSTALLED
[ -n "$(command -v lazygit)" ] \
    && alias lgit="lazygit"    \
    && debug_info "Adding aliases for 'lazygit'"

# IF GPG-TUI IS INSTALLED
[ -n "$(command -v gpg-tui)" ]               \
    &&  alias gpgt="gpg-tui --style colored" \
    && debug_info "Adding aliases for 'gpg-tui'"

# IF HIMALAYA IS INSTALLED
[ -n "$(command -v himalaya)" ]     \
    && alias hmly="himlaya"         \
    && alias hmlyw="himlaya write"  \
    && alias hmlys="himlaya search" \
    && alias hmlyr="himlaya read"   \
    && alias hmlyre="himlaya reply" \
    && alias hmlyrm="himlaya delete"

# IF MOLECULE IS INSTALLED
[ -n "$(command -v molecule)" ]       \
    && alias mol="molecule"           \
    && alias moli="molecule init"     \
    && alias molt="molecule test"     \
    && alias moll="molecule login"    \
    && alias molv="molecule verify"   \
    && alias molc="molecule create"   \
    && alias mold="molecule destroy"  \
    && alias molc="molecule converge" \
    && debug_info "Adding aliases for 'molecule'"

# IF TERRAFORM IS INSTALLED
[ -n "$(command -v terraform)" ]                     \
    &&  alias tf="terraform"                         \
    &&  alias tfi="terraform init"                   \
    &&  alias tfp="terraform plan"                   \
    &&  alias tfs="terraform show"                   \
    &&  alias tft="terraform taint"                  \
    &&  alias tfa="terraform apply"                  \
    &&  alias tfo="terraform output -json"           \
    &&  alias tfc="terraform console"                \
    &&  alias tfd="terraform destroy"                \
    &&  alias tfr="terraform refresh"                \
    &&  alias tfv="terraform validate"               \
    &&  alias tfw="terraform workspace"              \
    &&  alias tfu="terraform force-unlock"           \
    &&  alias tfwn="terraform workspace new"         \
    &&  alias tfwl="terraform workspace list"        \
    &&  alias tfws="terraform workspace select"      \
    &&  alias tfa!="terraform apply -auto-approve"   \
    &&  alias tfd!="terraform destroy -auto-approve" \
    && debug_info "Adding aliases for 'terraform'"

# IF INFRACOST IS INSTALLED
[ -n "$(command -v infracost)" ] \
    &&  alias ic="infracost"     \
    && debug_info "Adding aliases for 'infracost'"

# IF TERRAGRUNT IS INSTALLED
[ -n "$(command -v terragrunt)" ]                     \
    &&  alias tg="terragrunt"                         \
    &&  alias tgp="terragrunt plan"                   \
    && debug_info "Adding aliases for 'terragrunt'"

# IF TMUXINATOR IS INSTALLED
[ -n "$(command -v tmuxinator)" ]                 \
    &&  alias tx="tmuxinator"                     \
    &&  alias txn="tmuxinator new"                \
    &&  alias txo="tmuxinator open"               \
    &&  alias txl="tmuxinator list"               \
    &&  alias txk="tmuxinator stop"               \
    &&  alias txs="tmuxinator start"              \
    &&  alias dots="tmuxinator start dotfiles"    \
    &&  alias board="tmuxinator start dashboard"  \
    &&  alias media="tmuxinator start multimedia" \
    && debug_info "Adding aliases for 'tmuxinator'"

# IF LAZYDOCKER IS INSTALLED
[ -n "$(command -v lazydocker)" ] \
    && alias ldkr="lazydocker"    \
    && debug_info "Adding aliases for 'lazydocker'"

# IF PRE-COMMIT IS INSTALLED
[ -n "$(command -v pre-commit)" ]             \
    && alias pc="pre-commit"                  \
    && alias pca="pre-commit run --all-files" \
    && debug_info "Adding aliases for 'pre-commit'"

# IF MARKDOWNLINT-CLI IS INSTALLED
[ -n "$(command -v markdownlint)" ] \
    && alias mdl="markdownlint"     \
    && debug_info "Adding aliases for 'markdownlint"

# IF JENKINS-JOBS IS INSTALLED
[ -n "$(command -v jenkins-jobs)" ]         \
    && alias jjb="jenkins-jobs"             \
    && alias jjbu="jenkins-jobs update"     \
    && alias jjbd="jenkins-jobs delete"     \
    && debug_info "Adding aliases for 'jenkins-jobs'"

# IF TASKWARRIOR-TUI IS INSTALLED
[ -n "$(command -v taskwarrior-tui)" ] \
    && alias taskt="taskwarrior-tui"   \
    && debug_info "Adding aliases for 'taskwarrior-tui'"
