# https://www.josean.com/posts/how-to-setup-aerospace-tiling-window-manager
# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = [
]

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget svim',
  'exec-and-forget borders',
  'exec-and-forget SBAR_POSITION="top" sketchybar',
  'exec-and-forget SBAR_POSITION="bottom" sketchybar2',
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar2 --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

on-focus-changed = [
  'move-mouse window-lazy-center',
]

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = [
  'move-mouse monitor-lazy-center',
]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
outer.top        = [
  { monitor.'^built-in retina display$' = 60 },
  { monitor.'^asus xg17a$' = 60 },
    60
]
outer.left        = [
  { monitor.'^built-in retina display$' = 15 },
  { monitor.'^asus xg17a$' = 15 },
    15
]
outer.right        = [
  { monitor.'^built-in retina display$' = 15 },
  { monitor.'^asus xg17a$' = 15 },
    15
]
outer.bottom     = [
  { monitor.'^built-in retina display$' = 60 },
  { monitor.'^asus xg17a$' = 60 },
    60
]
inner.vertical   = [
  { monitor.'^built-in retina display$' = 10 },
  { monitor.'^asus xg17a$' = 10 },
    10
]
inner.horizontal = [
  { monitor.'^built-in retina display$' = 10 },
  { monitor.'^asus xg17a$' = 10 },
    10
]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

alt-f = [
  'exec-and-forget sketchybar -m --bar hidden=toggle',
  'exec-and-forget sketchybar2 -m --bar hidden=toggle',
  'fullscreen --no-outer-gaps'
]

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# In your config, you can drop workspace bindings that you don't need
# alt-1 = ['workspace 1']  # general purpose workspaces
# alt-2 = ['workspace 2']  # general purpose workspaces
# alt-3 = ['workspace 3']  # general purpose workspaces
# alt-4 = ['workspace 4']  # general purpose workspaces
# alt-5 = ['workspace 5']  # general purpose workspaces
# alt-6 = ['workspace 6']  # general purpose workspaces
# alt-7 = ['workspace 7']  # general purpose workspaces
# alt-8 = ['workspace 8']  # general purpose workspaces
# alt-9 = ['workspace 9']  # general purpose workspaces
alt-a = ['workspace A']  # audio
alt-b = ['workspace B']  # browsers
alt-c = ['workspace C']  # money calculations
alt-d = ['workspace D']  # development
# alt-e = ['workspace E']
alt-g = ['workspace G']  # trash or not focused apps
# alt-i = ['workspace I']
alt-m = ['workspace M']  # messages
alt-n = ['workspace N']  # note takings
alt-o = ['workspace O']  # organize
alt-p = ['workspace P']  # plan
# alt-q = ['workspace Q']
alt-r = ['workspace R']  # reuninons
# alt-s = 'workspace S']
# alt-t = ['workspace T']  # terminal
# alt-u = ['workspace U']
alt-v = ['workspace V']  # video
# alt-w = ['workspace W']
# alt-x = ['workspace X']
# alt-y = ['workspace Y']
# alt-z = ['workspace Z']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
# alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # general purpose workspaces
alt-shift-a = ['move-node-to-workspace A', 'workspace A', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # audio
alt-shift-b = ['move-node-to-workspace B', 'workspace B', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # browsers
alt-shift-c = ['move-node-to-workspace C', 'workspace C', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # money calculations
alt-shift-d = ['move-node-to-workspace D', 'workspace D', 'exec-and-forget sketchybar2 --trigger space_windows_change']
# alt-shift-e = ['move-node-to-workspace E', 'workspace E', 'exec-and-forget sketchybar2 --trigger space_windows_change']
alt-shift-g = ['move-node-to-workspace G', 'workspace G', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # trash or not focused apps
# alt-shift-i = ['move-node-to-workspace I', 'workspace I', 'exec-and-forget sketchybar2 --trigger space_windows_change']
alt-shift-m = ['move-node-to-workspace M', 'workspace M', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # messages
alt-shift-n = ['move-node-to-workspace N', 'workspace N', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # note taking
alt-shift-o = ['move-node-to-workspace O', 'workspace O', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # organize
alt-shift-p = ['move-node-to-workspace P', 'workspace P', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # plan
# alt-shift-q = ['move-node-to-workspace Q', 'workspace Q', 'exec-and-forget sketchybar2 --trigger space_windows_change']
alt-shift-r = ['move-node-to-workspace R', 'workspace R', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # reunions
# alt-shift-s = ['move-node-to-workspace S', 'workspace S', 'exec-and-forget sketchybar2 --trigger space_windows_change']
# alt-shift-t = ['move-node-to-workspace T', 'workspace T', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # terminal
# alt-shift-u = ['move-node-to-workspace U', 'workspace U', 'exec-and-forget sketchybar2 --trigger space_windows_change']
alt-shift-v = ['move-node-to-workspace V', 'workspace V', 'exec-and-forget sketchybar2 --trigger space_windows_change']  # video
# alt-shift-w = ['move-node-to-workspace W', 'workspace W', 'exec-and-forget sketchybar2 --trigger space_windows_change']
# alt-shift-x = ['move-node-to-workspace X', 'workspace X', 'exec-and-forget sketchybar2 --trigger space_windows_change']
# alt-shift-y = ['move-node-to-workspace Y', 'workspace Y', 'exec-and-forget sketchybar2 --trigger space_windows_change']
# alt-shift-z = ['move-node-to-workspace Z', 'workspace Z', 'exec-and-forget sketchybar2 --trigger space_windows_change']


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

alt-shift-f = 'macos-native-fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
# s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Automatically relocate applications to a certain workspace
# To find and app id you can run the below command:
# $ aerospace list-apps
# Audio applications
[[on-window-detected]]
run = 'move-node-to-workspace A'
if.app-id = 'com.apple.Music'

[[on-window-detected]]
run = 'move-node-to-workspace A'
if.app-id = 'com.apple.podcasts'

# Web browser applications
[[on-window-detected]]
run = 'move-node-to-workspace B'
if.app-id = 'com.apple.Safari'

[[on-window-detected]]
run = 'move-node-to-workspace B'
if.app-id = 'org.mozilla.Floorp'

[[on-window-detected]]
run = 'move-node-to-workspace B'
if.app-id = 'org.mozilla.firefox'

[[on-window-detected]]
run = 'move-node-to-workspace B'
if.app-id = 'org.chromium.Chromium'

# Money applications
[[on-window-detected]]
run = 'move-node-to-workspace C'
if.app-id = 'com.apple.calculator'

[[on-window-detected]]
run = 'move-node-to-workspace C'
if.app-id = 'com.pixyzehn.Expenses'

[[on-window-detected]]
run = 'move-node-to-workspace C'
if.app-id = 'com.touchbits.subscriptions'

# Development applications
[[on-window-detected]]
run = 'move-node-to-workspace D'
if.app-id = 'com.apple.Terminal'

[[on-window-detected]]
run = 'move-node-to-workspace D'
if.app-id = 'net.kovidgoyal.kitty'

[[on-window-detected]]
run = 'move-node-to-workspace D'
if.app-id = 'com.github.wez.wezterm'

[[on-window-detected]]
run = 'move-node-to-workspace D'
if.app-id = 'com.visualstudio.code.oss'

# Non-focused / general applications
[[on-window-detected]]
run = 'move-node-to-workspace G'
if.app-id = 'ch.protonvpn.mac'

[[on-window-detected]]
run = 'move-node-to-workspace G'
if.app-id = 'com.protonmail.bridge'

[[on-window-detected]]
run = 'move-node-to-workspace G'
if.app-id = 'com.apple.FontBook'

[[on-window-detected]]
run = 'move-node-to-workspace G'
if.app-id = 'com.apple.systempreferences'

[[on-window-detected]]
run = 'move-node-to-workspace G'
if.app-id = 'com.electron.dockerdesktop'

# Messaging applications
[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.apple.mail'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.apple.MobileSMS'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.microsoft.teams2'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'net.whatsapp.WhatsApp'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.microsoft.Outlook'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.kakao.KakaoTalkMac'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'com.tinyspeck.slackmacgap'

[[on-window-detected]]
run = 'move-node-to-workspace M'
if.app-id = 'org.whispersystems.signal-desktop'

# Note taking applications
[[on-window-detected]]
run = 'move-node-to-workspace N'
if.app-id = 'com.apple.Notes'

[[on-window-detected]]
run = 'move-node-to-workspace N'
if.app-id = 'com.apple.freeform'

[[on-window-detected]]
run = 'move-node-to-workspace N'
if.app-id = 'com.meal.plan.ios'  # crouton

# Organizing applications
[[on-window-detected]]
run = 'move-node-to-workspace O'
if.app-id = 'com.apple.finder'

[[on-window-detected]]
run = 'move-node-to-workspace O'
if.app-id = 'com.apple.Photos'

# Planing applications
[[on-window-detected]]
run = 'move-node-to-workspace P'
if.app-id = 'com.apple.iCal'

[[on-window-detected]]
run = 'move-node-to-workspace P'
if.app-id = 'com.apple.clock'

[[on-window-detected]]
run = 'move-node-to-workspace P'
if.app-id = 'com.apple.reminders'

# Video meeting/reunion applications
[[on-window-detected]]
run = 'move-node-to-workspace R'
if.app-id = 'com.apple.Facetime'

# Video applications
[[on-window-detected]]
run = 'move-node-to-workspace V'
if.app-id = 'stream.yattee.app'

[[on-window-detected]]
run = 'move-node-to-workspace V'
if.app-id = 'com.colliderli.iina'

[[on-window-detected]]
run = 'move-node-to-workspace V'
if.app-id = 'io.freetubeapp.freetube'

# Floating windows
[[on-window-detected]]
run = 'layout floating'
if.app-id = 'com.apple.AppStore'

[[on-window-detected]]
run = 'layout floating'
if.app-id = 'com.apple.systempreferences'

# You can use workspace-to-monitor-force-assignment syntax to assign workspaces to always appear on particular monitors
# Assign the first matched monitor to a workspace.
[workspace-to-monitor-force-assignment]

# Main display as primary
A = ['^built-in retina display$', '^asus xg17a$']
B = ['^built-in retina display$', '^asus xg17a$']
C = ['^built-in retina display$', '^asus xg17a$']
G = ['^built-in retina display$', '^asus xg17a$']
M = ['^built-in retina display$', '^asus xg17a$']
N = ['^built-in retina display$', '^asus xg17a$']
O = ['^built-in retina display$', '^asus xg17a$']
P = ['^built-in retina display$', '^asus xg17a$']
V = ['^built-in retina display$', '^asus xg17a$']

# Second display as primary
D = ['^asus xg17a$', '^built-in retina display$']
